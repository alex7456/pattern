class Student
  attr_accessor :id, :surname, :name, :patronymic, :telegram, :email, :git
  attr_reader :phone

  def initialize(**attributes)
    @errors = []
    attributes.each do |key, value|
      if respond_to?("#{key}=")
        begin
          send("#{key}=", value)
        rescue ArgumentError => e
          @errors << e.message
        end
      end
    end
    raise ArgumentError, @errors.join(", ") unless @errors.empty?
  end
  def validate_contact
  if phone.nil? && email.nil? && telegram.nil?
  raise ArgumentError,"Необходимо указать хоть один контакт: телефон, email или Телеграм"
  end
end
def validate_git
if git.nil? || git.empty?
raise ArgumentError, "Нeобходимо указать Github"
end
end
def validate
validate_contact
validate_git
end
  
  def self.valid_phone_number?(phone)
    !!(phone =~ /\A(\+?\d{1,3})?\s?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{3,4}\z/)
  end

  
  def self.valid_email?(email)
    !!(email =~ /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i)
  end

  
  
  def self.valid_id?(id)
    id.to_s =~ /^\d+$/
  end

  
  def self.valid_name_part?(name_part)
    !!(name_part =~ /\A[А-Яа-яЁёA-Za-z]+\z/)
  end

  
  def self.valid_telegram?(telegram)
    !!(telegram =~ /\A\w+\z/)
  end

  
  def self.valid_git?(git)
    !!(git =~ /\A[\w-]+\z/)
  end

  
  def phone=(value)
    if value.nil? || Student.valid_phone_number?(value)
      @phone = value
    else
      raise ArgumentError, "Недопустимый номер телефона: #{value}"
    end
  end

  
  def id=(value)
    if Student.valid_id?(value)
      @id = value
    else
      raise ArgumentError, "Недопустимый ID: #{value}"
    end
  end

  def surname=(value)
    if Student.valid_name_part?(value)
      @surname = value
    else
      raise ArgumentError, "Недопустимая фамилия: #{value}"
    end
  end

  def name=(value)
    if Student.valid_name_part?(value)
      @name = value
    else
      raise ArgumentError, "Недопустимое имя: #{value}"
    end
  end

  def patronymic=(value)
    if Student.valid_name_part?(value)
      @patronymic = value
    else
      raise ArgumentError, "Недопустимое отчество: #{value}"
    end
  end

  def telegram=(value)
    if value.nil? || Student.valid_telegram?(value)
      @telegram = value
    else
      raise ArgumentError, "Недопустимый Telegram: #{value}"
    end
  end

  def email=(value)
    if value.nil? || Student.valid_email?(value)
      @email = value
    else
      raise ArgumentError, "Недопустимый email: #{value}"
    end
  end

  def git=(value)
    if value.nil? || Student.valid_git?(value)
      @git = value
    else
      raise ArgumentError, "Недопустимый Git: #{value}"
    end
  end
end
